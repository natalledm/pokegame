{"version":3,"sources":["Pokecard.js","Pokedex.js","Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","number","imgSrc","this","props","id","slice","className","name","src","alt","type","exp","Component","Pokedex","title","isWinner","pokemon","map","p","base_experience","Pokegame","hand1","hand2","length","randIdx","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAoBeA,E,4JAbb,WACE,IAHcC,EAGVC,EAAM,UALG,8DAKH,QAHID,EAGwBE,KAAKC,MAAMC,KAHb,IAAM,YAAKJ,GAASK,OAAO,GAAKL,EAG1D,QACV,OACE,sBAAKM,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCJ,KAAKC,MAAMI,OAC3C,qBAAKC,IAAKP,EAAQQ,IAAKP,KAAKC,MAAMI,KAAMD,UAAU,iBAClD,sBAAKA,UAAU,gBAAf,mBAAsCJ,KAAKC,MAAMO,QACjD,sBAAKJ,UAAU,gBAAf,kBAAqCJ,KAAKC,MAAMQ,c,GARjCC,aCyBRC,G,kKA1Bb,WACE,IAAIC,EAMJ,OAJEA,EADCZ,KAAKC,MAAMY,SACN,oBAAIT,UAAU,iBAAd,0BAEA,oBAAIA,UAAU,gBAAd,yBAGN,sBAAKA,UAAU,UAAf,UACGQ,EACD,oDAAuBZ,KAAKC,MAAMQ,IAAlC,OACA,qBAAKL,UAAU,gBAAf,SACGJ,KAAKC,MAAMa,QAAQC,KAAI,SAACC,GAAD,OACtB,cAAC,EAAD,CACEd,GAAIc,EAAEd,GACNG,KAAMW,EAAEX,KACRG,KAAMQ,EAAER,KACRC,IAAKO,EAAEC,8B,GAlBCP,cCDhBQ,E,4JAaJ,WAGE,IAFA,IAAIC,EAAQ,GACRC,EAAK,YAAOpB,KAAKC,MAAMa,SACpBK,EAAME,OAASD,EAAMC,QAAQ,CAClC,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,QAC3CK,EAAcN,EAAMO,OAAOL,EAAS,GAAG,GAC3CH,EAAMS,KAAKF,GAGb,IAAIG,EAAOV,EAAMW,QAAO,SAACrB,EAAKK,GAAN,OAAkBL,EAAMK,EAAQG,kBAAiB,GACrEc,EAAOX,EAAMU,QAAO,SAACrB,EAAKK,GAAN,OAAkBL,EAAMK,EAAQG,kBAAiB,GAEzE,OACE,gCACE,cAAC,EAAD,CAASH,QAASK,EAAOV,IAAKoB,EAAMhB,SAAUgB,EAAOE,IACrD,cAAC,EAAD,CAASjB,QAASM,EAAOX,IAAKsB,EAAMlB,SAAUkB,EAAOF,W,GA5BtCnB,aAAjBQ,EACGc,aAAe,CACpBlB,QAAS,CACP,CAAEZ,GAAI,EAAGG,KAAM,aAAcG,KAAM,OAAQS,gBAAiB,IAC5D,CAAEf,GAAI,EAAGG,KAAM,WAAYG,KAAM,QAASS,gBAAiB,IAC3D,CAAEf,GAAI,GAAIG,KAAM,UAAWG,KAAM,MAAOS,gBAAiB,IACzD,CAAEf,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUS,gBAAiB,KAC/D,CAAEf,GAAI,GAAIG,KAAM,UAAWG,KAAM,WAAYS,gBAAiB,KAC9D,CAAEf,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUS,gBAAiB,IAC/D,CAAEf,GAAI,GAAIG,KAAM,SAAUG,KAAM,SAAUS,gBAAiB,KAC3D,CAAEf,GAAI,IAAKG,KAAM,QAASG,KAAM,SAAUS,gBAAiB,MAwBlDC,QC1BAe,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.538d6d90.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Pokecard.css';\r\n\r\nconst POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\r\n\r\nlet padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number)\r\nclass Pokecard extends Component {\r\n  render(){\r\n    let imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`\r\n    return(\r\n      <div className=\"Pokecard\">\r\n        <h1 className=\"Pokecard-title\">{this.props.name}</h1>\r\n        <img src={imgSrc} alt={this.props.name} className=\"Pokecard-img\"/>\r\n        <div className=\"Pokecard-data\">Type: {this.props.type}</div>\r\n        <div className=\"Pokecard-data\">Exp: {this.props.exp}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokecard;","import React, { Component } from \"react\";\r\nimport Pokecard from \"./Pokecard\";\r\nimport \"./Pokedex.css\";\r\n\r\nclass Pokedex extends Component {\r\n  render() {\r\n    let title;\r\n    if(this.props.isWinner){\r\n      title=<h1 className=\"Pokedex-winner\">Winning Hand</h1>\r\n    } else {\r\n      title=<h1 className=\"Pokedex-loser\">Losing Hand</h1>\r\n    }\r\n    return (\r\n      <div className=\"Pokedex\">\r\n        {title}\r\n        <h4>Total Experience: {this.props.exp} </h4>\r\n        <div className=\"Pokedex-cards\">\r\n          {this.props.pokemon.map((p) => (\r\n            <Pokecard\r\n              id={p.id}\r\n              name={p.name}\r\n              type={p.type}\r\n              exp={p.base_experience}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokedex;\r\n","import React, { Component } from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\n\r\nclass Pokegame extends Component {\r\n  static defaultProps = {\r\n    pokemon: [\r\n      { id: 4, name: \"Charmander\", type: \"fire\", base_experience: 62 },\r\n      { id: 7, name: \"Squirtle\", type: \"water\", base_experience: 63 },\r\n      { id: 11, name: \"Metapod\", type: \"bug\", base_experience: 72 },\r\n      { id: 12, name: \"Butterfree\", type: \"flying\", base_experience: 178 },\r\n      { id: 25, name: \"Pikachu\", type: \"electric\", base_experience: 112 },\r\n      { id: 39, name: \"Jigglypuff\", type: \"normal\", base_experience: 95 },\r\n      { id: 94, name: \"Gengar\", type: \"poison\", base_experience: 225 },\r\n      { id: 133, name: \"Eevee\", type: \"normal\", base_experience: 65 },\r\n    ],\r\n  };\r\n  render() {\r\n    let hand1 = [];\r\n    let hand2 = [...this.props.pokemon];\r\n    while (hand1.length < hand2.length) {\r\n      let randIdx = Math.floor(Math.random() * hand2.length);\r\n      let randPokemon = hand2.splice(randIdx, 1)[0];\r\n      hand1.push(randPokemon);\r\n    }\r\n\r\n    let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n    let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n\r\n    return (\r\n      <div>\r\n        <Pokedex pokemon={hand1} exp={exp1} isWinner={exp1 > exp2}/>\r\n        <Pokedex pokemon={hand2} exp={exp2} isWinner={exp2 > exp1}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokegame;\r\n","import './App.css';\nimport Pokegame from './Pokegame';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pokegame />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}